<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>com.bandmix</groupId>
	<artifactId>eureka-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>eureka-server</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.11</java.version>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>eureka-server</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>repackage</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			</plugin>

			<!--<plugin>-->
				<!--<groupId>com.spotify</groupId>-->
				<!--<artifactId>docker-maven-plugin</artifactId>-->
				<!--<version>1.2.0</version>-->

				<!--<executions>-->
					<!--<execution>-->
						<!--<id>build-image</id>-->
						<!--<phase>package</phase>-->
						<!--<goals>-->
							<!--<goal>build</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<configuration>-->
					<!--&lt;!&ndash; 镜像名称&ndash;&gt;-->
					<!--<imageName>${project.artifactId}</imageName>-->
					<!--&lt;!&ndash; 镜像标签&ndash;&gt;-->
					<!--<imageTags>-->
						<!--&lt;!&ndash;可以指定多个标签    建议弄成自增序列或者时间戳类型，用于区分版本&ndash;&gt;-->
						<!--<imageTag>${maven.build.timestamp}</imageTag>-->
					<!--</imageTags>-->
					<!--<baseImage>java</baseImage>-->
					<!--<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>-->
					<!--&lt;!&ndash; dockerfile文件路径&ndash;&gt;-->
					<!--<dockerDirectory>src/main/docker</dockerDirectory>-->
					<!--<resources>-->
						<!--<resource>-->
							<!--<targetPath>/</targetPath>-->
							<!--<directory>${project.build.directory}</directory>-->
							<!--<include>${project.build.finalName}.jar</include>-->
						<!--</resource>-->
					<!--</resources>-->
				<!--</configuration>-->
			<!--</plugin>-->

		</plugins>
	</build>

</project>
